diff -urN imap-2007f.org/src/osdep/unix/ssl_unix.c imap-2007f/src/osdep/unix/ssl_unix.c
--- imap-2007f.org/src/osdep/unix/ssl_unix.c	2011-07-23 02:20:10.000000000 +0200
+++ imap-2007f/src/osdep/unix/ssl_unix.c	2018-09-19 09:48:16.264495807 +0200
@@ -269,10 +269,21 @@
   if (!(flags & NET_NOVALIDATECERT) &&
       (err = ssl_validate_cert (cert = SSL_get_peer_certificate (stream->con),
 				host))) {
+    X509_NAME *subject_name;
+    char *cert_name = NULL;
+    if (cert) {
+      subject_name = X509_get_subject_name(cert);
+      cert_name = X509_NAME_oneline(subject_name, NULL, 0);
+    }
+    if (scq) {
+      sprintf (tmp,"*%.255s",err,cert_name ? cert_name : "???");
+      OPENSSL_free(cert_name);
 				/* application callback */
-    if (scq) return (*scq) (err,host,cert ? cert->name : "???") ? NIL : "";
+      return (*scq) (err,host,cert ? tmp : "???") ? NIL : "";
+    }
 				/* error message to return via mm_log() */
-    sprintf (tmp,"*%.128s: %.255s",err,cert ? cert->name : "???");
+    sprintf (tmp,"*%.128s: %.255s",err,cert_name ? cert_name : "???");
+    OPENSSL_free(cert_name);
     return ssl_last_error = cpystr (tmp);
   }
   return NIL;
@@ -319,12 +330,20 @@
   char *s,*t,*ret;
   void *ext;
   GENERAL_NAME *name;
+
+  X509_NAME *subject_name;
+  char *cert_name = NULL;
+  if (cert) {
+    subject_name = X509_get_subject_name(cert);
+    cert_name = X509_NAME_oneline(subject_name, NULL, 0);
+  }
+
 				/* make sure have a certificate */
   if (!cert) ret = "No certificate from server";
 				/* and that it has a name */
-  else if (!cert->name) ret = "No name in certificate";
+  else if (!cert_name) ret = "No name in certificate";
 				/* locate CN */
-  else if (s = strstr (cert->name,"/CN=")) {
+  else if (s = strstr (cert_name,"/CN=")) {
     if (t = strchr (s += 4,'/')) *t = '\0';
 				/* host name matches pattern? */
     ret = ssl_compare_hostnames (host,s) ? NIL :
@@ -340,6 +359,7 @@
 	    ssl_compare_hostnames (host,s)) ret = NIL;
   }
   else ret = "Unable to locate common name in certificate";
+  OPENSSL_free(cert_name);
   return ret;
 }
 
